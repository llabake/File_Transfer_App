version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.2-node
        environment:
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: file_transfer_app_test
          POSTGRES_PASSWORD: ""


    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - llabake/file_transfer_app-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - llabake/file_transfer_app-

      - run:
          name: Install dependencies
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler
            bundle install --path vendor/bundle


      - save_cache:
          key: llabake/file_transfer_app-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      # Database setup
      - run:
          name: Database setup
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate

      # Run Code Linter
      - run:
          name: Linting Codebase
          command: |
            bundle exec rubocop

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            -- \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      # Save test results for timing analysis
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
